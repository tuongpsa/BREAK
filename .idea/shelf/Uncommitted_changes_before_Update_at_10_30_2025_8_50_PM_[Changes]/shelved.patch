Index: src/game/ui/GameScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package game.ui;\r\n\r\nimport game.audio.AudioManager;\r\nimport javafx.animation.AnimationTimer;\r\nimport javafx.scene.canvas.Canvas;\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.input.KeyEvent;\r\n\r\n/**\r\n * Lớp cơ sở cho mọi màn hình game.\r\n */\r\npublic abstract class GameScreen extends Canvas {\r\n    protected AudioManager audioManager;\r\n    protected boolean leftPressed = false;\r\n    protected boolean rightPressed = false;\r\n    protected boolean paused = false;\r\n\r\n    private AnimationTimer gameTimer;\r\n\r\n    public GameScreen(double width, double height) {\r\n        super(width, height);\r\n        audioManager = new AudioManager();\r\n        this.setFocusTraversable(true);\r\n\r\n        // Xử lý phím nhấn\r\n        this.setOnKeyPressed(this::handleKeyPressed);\r\n        this.setOnKeyReleased(this::handleKeyReleased);\r\n    }\r\n\r\n    // Abstract methods mà màn hình con phải implement\r\n    protected abstract void updateGame(float deltaTime);\r\n    protected abstract void renderGame();\r\n    \r\n    // Abstract methods cho xử lý phím game over\r\n    protected abstract void handleRestartKey();\r\n    protected abstract void handleQuitKey();\r\n\r\n    // Start game loop\r\n    public void startGameLoop() {\r\n        if (gameTimer != null) gameTimer.stop();\r\n\r\n        gameTimer = new AnimationTimer() {\r\n            private long lastTime = 0;\r\n\r\n            @Override\r\n            public void handle(long now) {\r\n                if (lastTime > 0) {\r\n                    float deltaTime = (now - lastTime) / 1_000_000_000f;\r\n                    if (!paused) updateGame(deltaTime);\r\n                    renderGame();\r\n                }\r\n                lastTime = now;\r\n            }\r\n        };\r\n        gameTimer.start();\r\n\r\n        if (audioManager != null) audioManager.playGameMusic();\r\n    }\r\n\r\n    public void stopGameLoop() {\r\n        if (gameTimer != null) gameTimer.stop();\r\n        if (audioManager != null) audioManager.stopGameMusic();\r\n    }\r\n\r\n    // Xử lý phím\r\n    protected void handleKeyPressed(KeyEvent e) {\r\n        System.out.println(\"Key pressed: \" + e.getCode()); // Debug\r\n        \r\n        if (e.getCode() == KeyCode.LEFT) leftPressed = true;\r\n        if (e.getCode() == KeyCode.RIGHT) rightPressed = true;\r\n        if (e.getCode() == KeyCode.SPACE) paused = !paused;\r\n        \r\n        // Xử lý phím khi game over\r\n        if (e.getCode() == KeyCode.R) {\r\n            System.out.println(\"R key pressed - calling handleRestartKey\");\r\n            handleRestartKey();\r\n        }\r\n        if (e.getCode() == KeyCode.ESCAPE) {\r\n            System.out.println(\"ESC key pressed - calling handleQuitKey\");\r\n            handleQuitKey();\r\n        }\r\n    }\r\n\r\n    protected void handleKeyReleased(KeyEvent e) {\r\n        if (e.getCode() == KeyCode.LEFT) leftPressed = false;\r\n        if (e.getCode() == KeyCode.RIGHT) rightPressed = false;\r\n    }\r\n\r\n    public boolean isPaused() {\r\n        return paused;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/game/ui/GameScreen.java b/src/game/ui/GameScreen.java
--- a/src/game/ui/GameScreen.java	(revision e279a344a8846a8da5d8a214d90239bc9ebd28e3)
+++ b/src/game/ui/GameScreen.java	(date 1761831225673)
@@ -5,6 +5,8 @@
 import javafx.scene.canvas.Canvas;
 import javafx.scene.input.KeyCode;
 import javafx.scene.input.KeyEvent;
+import javafx.application.Platform;
+import javafx.stage.Stage;
 
 /**
  * Lớp cơ sở cho mọi màn hình game.
@@ -30,7 +32,7 @@
     // Abstract methods mà màn hình con phải implement
     protected abstract void updateGame(float deltaTime);
     protected abstract void renderGame();
-    
+
     // Abstract methods cho xử lý phím game over
     protected abstract void handleRestartKey();
     protected abstract void handleQuitKey();
@@ -65,12 +67,37 @@
     // Xử lý phím
     protected void handleKeyPressed(KeyEvent e) {
         System.out.println("Key pressed: " + e.getCode()); // Debug
-        
-        if (e.getCode() == KeyCode.LEFT) leftPressed = true;
-        if (e.getCode() == KeyCode.RIGHT) rightPressed = true;
-        if (e.getCode() == KeyCode.SPACE) paused = !paused;
-        
-        // Xử lý phím khi game over
+
+        // ✅ Hỗ trợ cả mũi tên + WASD
+        if (e.getCode() == KeyCode.LEFT || e.getCode() == KeyCode.A)
+            leftPressed = true;
+
+        if (e.getCode() == KeyCode.RIGHT || e.getCode() == KeyCode.D)
+            rightPressed = true;
+
+        // ✅ Nhấn SPACE để pause menu
+        if (e.getCode() == KeyCode.SPACE) {
+            paused = !paused;
+            if (paused) {
+                Platform.runLater(() -> {
+                    PauseMenu pauseMenu = new PauseMenu();
+                    pauseMenu.show(
+                            (Stage) this.getScene().getWindow(),
+                            () -> paused = false,      // Resume
+                            () -> {                    // Replay
+                                paused = false;
+                                handleRestartKey();
+                            },
+                            () -> {                    // Exit
+                                paused = false;
+                                handleQuitKey();
+                            }
+                    );
+                });
+            }
+        }
+
+        // Key khi game over
         if (e.getCode() == KeyCode.R) {
             System.out.println("R key pressed - calling handleRestartKey");
             handleRestartKey();
@@ -82,8 +109,14 @@
     }
 
     protected void handleKeyReleased(KeyEvent e) {
-        if (e.getCode() == KeyCode.LEFT) leftPressed = false;
-        if (e.getCode() == KeyCode.RIGHT) rightPressed = false;
+
+        // ✅ Nhả phím A/LEFT
+        if (e.getCode() == KeyCode.LEFT || e.getCode() == KeyCode.A)
+            leftPressed = false;
+
+        // ✅ Nhả phím D/RIGHT
+        if (e.getCode() == KeyCode.RIGHT || e.getCode() == KeyCode.D)
+            rightPressed = false;
     }
 
     public boolean isPaused() {
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\" defaultProject=\"true\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision e279a344a8846a8da5d8a214d90239bc9ebd28e3)
+++ b/.idea/vcs.xml	(date 1761793957170)
@@ -1,4 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="VcsDirectoryMappings" defaultProject="true" />
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
 </project>
\ No newline at end of file
Index: src/game/ui/PauseMenu.java
===================================================================
diff --git a/src/game/ui/PauseMenu.java b/src/game/ui/PauseMenu.java
new file mode 100644
--- /dev/null	(date 1761800286582)
+++ b/src/game/ui/PauseMenu.java	(date 1761800286582)
@@ -0,0 +1,105 @@
+package game.ui;
+
+import javafx.geometry.Pos;
+import javafx.scene.Scene;
+import javafx.scene.control.*;
+import javafx.scene.layout.VBox;
+import javafx.stage.Modality;
+import javafx.stage.Stage;
+import javafx.stage.StageStyle;
+
+public class PauseMenu {
+
+    private boolean muted = false;
+    private boolean useArrowKeys = true;
+    private double volume = 0.5;
+
+    public void show(Stage parentStage, Runnable onResume, Runnable onReplay, Runnable onExit) {
+        Stage pauseStage = new Stage();
+        pauseStage.initModality(Modality.APPLICATION_MODAL);
+        pauseStage.initOwner(parentStage);
+        pauseStage.initStyle(StageStyle.UTILITY);
+        pauseStage.setTitle("Pause Menu");
+
+        // --- Resume Button ---
+        Button resumeButton = new Button("Resume");
+        resumeButton.setOnAction(e -> {
+            pauseStage.close();
+            onResume.run();
+        });
+
+        // --- Replay Button ---
+        Button replayButton = new Button("Replay");
+        replayButton.setOnAction(e -> {
+            pauseStage.close();
+            onReplay.run();
+        });
+
+        // --- Exit Button ---
+        Button exitButton = new Button("Exit");
+        exitButton.setOnAction(e -> {
+            pauseStage.close();
+            onExit.run();
+        });
+
+        // --- Setting Button ---
+        Button settingButton = new Button("Setting");
+        settingButton.setOnAction(e -> showSettingWindow(pauseStage));
+
+        VBox layout = new VBox(15, resumeButton, replayButton, settingButton, exitButton);
+        layout.setAlignment(Pos.CENTER);
+        layout.setStyle("-fx-background-color: #2E2E2E; -fx-padding: 20;");
+
+        Scene scene = new Scene(layout, 300, 250);
+        pauseStage.setScene(scene);
+        pauseStage.showAndWait();
+    }
+
+    private void showSettingWindow(Stage parentStage) {
+        Stage settingStage = new Stage();
+        settingStage.initModality(Modality.APPLICATION_MODAL);
+        settingStage.initOwner(parentStage);
+        settingStage.setTitle("Settings");
+
+        // --- Volume Slider ---
+        Label volumeLabel = new Label("Volume: " + (int) (volume * 100) + "%");
+        Slider volumeSlider = new Slider(0, 1, volume);
+        volumeSlider.setShowTickMarks(true);
+        volumeSlider.setShowTickLabels(true);
+        volumeSlider.setMajorTickUnit(0.25);
+        volumeSlider.valueProperty().addListener((obs, oldVal, newVal) -> {
+            volume = newVal.doubleValue();
+            volumeLabel.setText("Volume: " + (int) (volume * 100) + "%");
+            // TODO: Gọi tới âm thanh của game để set volume (nếu có)
+        });
+
+        // --- Mute / Unmute ---
+        Button muteButton = new Button(muted ? "Unmute" : "Mute");
+        muteButton.setOnAction(e -> {
+            muted = !muted;
+            muteButton.setText(muted ? "Unmute" : "Mute");
+            // TODO: Gọi tới hệ thống âm thanh để mute/unmute
+        });
+
+        // --- Change Controls ---
+        Button controlButton = new Button(useArrowKeys ? "Switch to WASD" : "Switch to Arrow Keys");
+        controlButton.setOnAction(e -> {
+            useArrowKeys = !useArrowKeys;
+            controlButton.setText(useArrowKeys ? "Switch to WASD" : "Switch to Arrow Keys");
+            // TODO: Gọi tới GameInput để thay đổi kiểu điều khiển
+        });
+
+        VBox layout = new VBox(15, volumeLabel, volumeSlider, muteButton, controlButton);
+        layout.setAlignment(Pos.CENTER);
+        layout.setStyle("-fx-background-color: #1C1C1C; -fx-padding: 20;");
+        Scene scene = new Scene(layout, 350, 250);
+
+        settingStage.setScene(scene);
+        settingStage.showAndWait();
+    }
+
+    // Getter/Setter (nếu muốn lưu lại trạng thái)t
+    public boolean isMuted() { return muted; }
+    public boolean isUsingArrowKeys() { return useArrowKeys; }
+    public double getVolume() { return volume; }
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"6ebd94be-9e6a-4cc4-95ec-5a85fbc752f2\" name=\"Changes\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"CompilerWorkspaceConfiguration\">\r\n    <option name=\"CLEAR_OUTPUT_DIRECTORY\" value=\"false\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"FindBugs-IDEA-Workspace\">\r\n    <analyzeAfterCompile>true</analyzeAfterCompile>\r\n    <toolWindowToFront>false</toolWindowToFront>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"34dKDrnuOJLUx82B63bY15hDhYO\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"abbreviatePackageNames\" value=\"true\" />\r\n    <option name=\"autoscrollFromSource\" value=\"true\" />\r\n    <option name=\"autoscrollToSource\" value=\"true\" />\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showExcludedFiles\" value=\"false\" />\r\n    <option name=\"showModules\" value=\"false\" />\r\n    <option name=\"sortByType\" value=\"true\" />\r\n    <option name=\"sortKey\" value=\"BY_TYPE\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/PC/Downloads/BREAK&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"&lt;template&gt;\" type=\"TestNG\" default=\"true\" selected=\"false\">\r\n      <option name=\"VM_PARAMETERS\" value=\"-ea\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"%MODULE_WORKING_DIR%\" />\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"game.main.Main\" />\r\n      <module name=\"BREAK\" />\r\n      <option name=\"VM_PARAMETERS\" value=\"--module-path &quot;C:\\Users\\PC\\OneDrive\\Java\\javafx-sdk-25\\lib&quot; --add-modules javafx.controls,javafx.fxml,javafx.media --enable-native-access=javafx.graphics --add-exports=javafx.base/com.sun.javafx=ALL-UNNAMED --add-exports=javafx.media/com.sun.media.jfxmedia=ALL-UNNAMED --add-exports=javafx.graphics/com.sun.glass.utils=ALL-UNNAMED \" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JUnit\" factoryName=\"JUnit\">\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"%MODULE_WORKING_DIR%\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"6ebd94be-9e6a-4cc4-95ec-5a85fbc752f2\" name=\"Changes\" comment=\"\" />\r\n      <created>1761537891456</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1761537891456</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision e279a344a8846a8da5d8a214d90239bc9ebd28e3)
+++ b/.idea/workspace.xml	(date 1761832096983)
@@ -4,7 +4,19 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="6ebd94be-9e6a-4cc4-95ec-5a85fbc752f2" name="Changes" comment="" />
+    <list default="true" id="6ebd94be-9e6a-4cc4-95ec-5a85fbc752f2" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/src/game/ui/PauseMenu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/libraries/lib.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/lib.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/highscores.dat" beforeDir="false" afterPath="$PROJECT_DIR$/highscores.dat" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/BREAK/game/audio/AudioManager.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/BREAK/game/audio/AudioManager.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/BREAK/game/ui/GameScreen$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/BREAK/game/ui/GameScreen$1.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/BREAK/game/ui/GameScreen.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/BREAK/game/ui/GameScreen.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/game/audio/AudioManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/game/audio/AudioManager.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/game/core/PauseManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/game/core/PauseManager.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/game/ui/GameScreen.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/game/ui/GameScreen.java" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -24,6 +36,21 @@
     <analyzeAfterCompile>true</analyzeAfterCompile>
     <toolWindowToFront>false</toolWindowToFront>
   </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="GitHubPullRequestSearchHistory">{
+  &quot;lastFilter&quot;: {
+    &quot;state&quot;: &quot;OPEN&quot;,
+    &quot;assignee&quot;: &quot;Hoangkkk2&quot;
+  }
+}</component>
+  <component name="GithubPullRequestsUISettings">{
+  &quot;selectedUrlAndAccountId&quot;: {
+    &quot;url&quot;: &quot;https://github.com/tuongpsa/BREAK.git&quot;,
+    &quot;accountId&quot;: &quot;96ce585c-0568-4b4c-a2b7-90165fc50402&quot;
+  }
+}</component>
   <component name="ProjectColorInfo">{
   &quot;customColor&quot;: &quot;&quot;,
   &quot;associatedIndex&quot;: 4
@@ -39,27 +66,27 @@
     <option name="sortByType" value="true" />
     <option name="sortKey" value="BY_TYPE" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
-    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/PC/Downloads/BREAK&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Application.Main.executor": "Run",
+    "ModuleVcsDetector.initialDetectionPerformed": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "RunOnceActivity.git.unshallow": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "git-widget-placeholder": "main",
+    "kotlin-language-version-configured": "true",
+    "last_opened_file_path": "C:/BREAK",
+    "project.structure.last.edited": "Libraries",
+    "project.structure.proportion": "0.140625",
+    "project.structure.side.proportion": "0.2",
+    "settings.editor.selected.configurable": "org.jetbrains.plugins.github.ui.GithubSettingsConfigurable"
   }
-}</component>
+}]]></component>
   <component name="RunManager">
-    <configuration name="&lt;template&gt;" type="TestNG" default="true" selected="false">
-      <option name="VM_PARAMETERS" value="-ea" />
-      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
-    </configuration>
     <configuration name="Main" type="Application" factoryName="Application">
       <option name="MAIN_CLASS_NAME" value="game.main.Main" />
       <module name="BREAK" />
-      <option name="VM_PARAMETERS" value="--module-path &quot;C:\Users\PC\OneDrive\Java\javafx-sdk-25\lib&quot; --add-modules javafx.controls,javafx.fxml,javafx.media --enable-native-access=javafx.graphics --add-exports=javafx.base/com.sun.javafx=ALL-UNNAMED --add-exports=javafx.media/com.sun.media.jfxmedia=ALL-UNNAMED --add-exports=javafx.graphics/com.sun.glass.utils=ALL-UNNAMED " />
+      <option name="VM_PARAMETERS" value="--module-path &quot;C:\openjfx-25.0.1_windows-x64_bin-sdk\javafx-sdk-25.0.1\lib&quot; --add-modules javafx.controls,javafx.fxml,javafx.media --enable-native-access=javafx.graphics --add-exports=javafx.base/com.sun.javafx=ALL-UNNAMED --add-exports=javafx.media/com.sun.media.jfxmedia=ALL-UNNAMED --add-exports=javafx.graphics/com.sun.glass.utils=ALL-UNNAMED" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -73,6 +100,15 @@
     <configuration default="true" type="JUnit" factoryName="JUnit">
       <option name="TEST_OBJECT" value="class" />
       <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration default="true" type="TestNG">
+      <option name="TEST_OBJECT" value="CLASS" />
+      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
+      <properties />
+      <listeners />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
Index: .idea/libraries/lib.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"libraryTable\">\r\n  <library name=\"lib\">\r\n    <CLASSES>\r\n      <root url=\"file://$USER_HOME$/OneDrive/Java/javafx-sdk-25/lib\" />\r\n    </CLASSES>\r\n    <JAVADOC />\r\n    <SOURCES />\r\n    <jarDirectory url=\"file://$USER_HOME$/OneDrive/Java/javafx-sdk-25/lib\" recursive=\"false\" />\r\n  </library>\r\n</component>
===================================================================
diff --git a/.idea/libraries/lib.xml b/.idea/libraries/lib.xml
--- a/.idea/libraries/lib.xml	(revision e279a344a8846a8da5d8a214d90239bc9ebd28e3)
+++ b/.idea/libraries/lib.xml	(date 1761794052731)
@@ -1,10 +1,10 @@
 <component name="libraryTable">
   <library name="lib">
     <CLASSES>
-      <root url="file://$USER_HOME$/OneDrive/Java/javafx-sdk-25/lib" />
+      <root url="file://$PROJECT_DIR$/../openjfx-25.0.1_windows-x64_bin-sdk/javafx-sdk-25.0.1/lib" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
-    <jarDirectory url="file://$USER_HOME$/OneDrive/Java/javafx-sdk-25/lib" recursive="false" />
+    <jarDirectory url="file://$PROJECT_DIR$/../openjfx-25.0.1_windows-x64_bin-sdk/javafx-sdk-25.0.1/lib" recursive="false" />
   </library>
 </component>
\ No newline at end of file
